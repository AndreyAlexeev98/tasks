// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç n-–µ —á–∏—Å–ª–æ –§–∏–±–æ–Ω–∞—á—á–∏, –≥–¥–µ:

// –ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ ùêπ(0) = 0; // –ü–æ –ø—Ä–∞–≤–∏–ª—É –ª–∏–Ω–µ–π–Ω–æ–π —Ä–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
// –í—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ ùêπ(1) = 1; // –ü–æ –ø—Ä–∞–≤–∏–ª—É –ª–∏–Ω–µ–π–Ω–æ–π —Ä–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
// –ö–∞–∂–¥–æ–µ —Å–ª–µ–¥—É—é—â–µ–µ —á–∏—Å–ª–æ (–Ω–∞—á–∏–Ω–∞—è —Å 2—Ö):
// ùêπ(ùëõ) = ùêπ(ùëõ‚àí1) + ùêπ(ùëõ‚àí2);
// F(2) = F(1) + F(0) = 1 + 0 = 1
// F(3) = F(2) + F(1) = 1 + 1 = 2
// F(9) = F(8) + F(7) = 21 + 13 = 34

// fib(5) = 5 // 0, 1, 1, 2, 3, 5
// fib(10) = 55 // 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55
// fibonacci(n) = fibonacci(n-1) + fibonacci(n-2) –¥–ª—è –≤—Å–µ—Ö n > 1.
// –£—Å–ª–æ–≤–∏–µ:
// –í—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ n –±—É–¥–µ—Ç —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º, –∏ n >= 0.

function fibonacci(n) {
  if (n === 0) {
    return 0;
  }
  if (n === 1) {
    return 1;
  }
  return fibonacci(n - 1) + fibonacci(n - 2);
}

/*
–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–µ, –Ω–æ –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –¥–ª—è –±–æ–ª—å—à–∏—Ö —á–∏—Å–µ–ª, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–æ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –æ–¥–Ω–∏ –∏ —Ç–µ –∂–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –º–Ω–æ–≥–æ —Ä–∞–∑.

–ë–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ ‚Äî –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ:

function fibonacci(n) {
  if (n === 0) return 0;
  if (n === 1) return 1;
  
  let a = 0, b = 1, sum = 0;

  for (let i = 2; i <= n; i++) {
    sum = a + b;
    a = b;
    b = sum;
  }
  
  return sum;
}

console.log(fibonacci(5));  // 5
console.log(fibonacci(10)); // 55

*/
